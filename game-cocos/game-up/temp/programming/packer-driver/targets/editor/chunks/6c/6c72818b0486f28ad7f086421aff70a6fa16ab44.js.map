{"version":3,"sources":["file:///Users/chenchao/code/person/game-upgradation/game-cocos/game-up/assets/iogame/SocketClient.ts"],"names":["SocketClient","SysConfig","HandleMgr","LogUtils","decodeExternalMessage","SocketState_NoConnect","SocketState_Connected","SocketState_Closing","SocketState_Closed","SocketState","webScoket","AUTO_CONNECT","recvBuf","ins","_ins","connect","ws","wsUrl","log","WebSocket","binaryType","onclose","bind","onerror","onmessage","onopen","event","checkAndAutoConnect","readyState","send","pbBuff","error","recvData","Uint8Array","data","packageHandler","cmdMerge","close"],"mappings":";;;qFAkBqBA,Y;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAlBbC,MAAAA,S,iBAAAA,S;;AAEDC,MAAAA,S;;AACAC,MAAAA,Q;;AACCC,MAAAA,qB,iBAAAA,qB;;;;;;;AAGR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;yBACqBJ,Y,GAAN,MAAMA,YAAN,CAAsC;AAAA;AASjD;AACA;AACA;AACA;AAEA;AAdiD,eAe1CK,qBAf0C,GAeV,CAfU;AAeN;AAfM,eAgB1CC,qBAhB0C,GAgBV,CAhBU;AAgBN;AAhBM,eAiB1CC,mBAjB0C,GAiBZ,CAjBY;AAiBT;AAjBS,eAkB1CC,kBAlB0C,GAkBb,CAlBa;AAkBV;AAlBU,eAmB1CC,WAnB0C,GAmBpB,KAAKJ,qBAnBe;AAAA,eAoB1CK,SApB0C,GAoBnB,IApBmB;AAAA,eAqBzCC,YArByC,GAqBlB,IArBkB;AAAA,eAsB1CC,OAtB0C;AAAA;;AAIjD;AACqB,mBAAHC,GAAG,GAAiB;AAClC,iBAAO,KAAKC,IAAL,IAAa,IAAb,GAAoB,KAAKA,IAAL,GAAY,IAAId,YAAJ,EAAhC,GAAqD,KAAKc,IAAjE;AACH;;AAe0C;AACvB,cAAPC,OAAO,CAACC,EAAU,GAAG;AAAA;AAAA,oCAAUC,KAAxB,EAA8C;AAC9D;AAAA;AAAA,oCAASC,GAAT,CAAa,aAAb;;AACA,cAAI,CAAC,KAAKR,SAAV,EAAqB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAKA,SAAL,GAAiB,IAAIS,SAAJ,CAAcH,EAAd,CAAjB,CATiB,CAUjB;AACH;;AACD,cAAI,KAAKP,WAAL,IAAoB,KAAKH,qBAA7B,EAAoD;AAChD,iBAAKI,SAAL,CAAeU,UAAf,GAA4B,aAA5B;AACA,iBAAKV,SAAL,CAAeW,OAAf,GAAyB,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAzB;AACA,iBAAKZ,SAAL,CAAea,OAAf,GAAyB,KAAKA,OAAL,CAAaD,IAAb,CAAkB,IAAlB,CAAzB;AACA,iBAAKZ,SAAL,CAAec,SAAf,GAA2B,KAAKA,SAAL,CAAeF,IAAf,CAAoB,IAApB,CAA3B;AACA,iBAAKZ,SAAL,CAAee,MAAf,GAAwB,KAAKA,MAAL,CAAYH,IAAZ,CAAiB,IAAjB,CAAxB;AACH,WAND,MAMO;AACH,iBAAKG,MAAL,CAAY,IAAZ;AACH;AACJ;;AAGMA,QAAAA,MAAM,CAACC,KAAD,EAAqB;AAC9B,eAAKjB,WAAL,GAAmB,KAAKH,qBAAxB;AACA;AAAA;AAAA,oCAASY,GAAT,CAAa,QAAb,EAAuBQ,KAAvB;AACH;;AAEMC,QAAAA,mBAAmB,GAAG;AACzB,cAAI,CAAC,KAAKjB,SAAN,IAAmB,KAAKA,SAAL,CAAekB,UAAf,KAA8B,KAAKtB,qBAA1D,EAAiF;AAC7E;AACI;AAAA;AAAA,sCAASY,GAAT,CAAa,aAAb,EAFyE,CAGzE;AACJ;;AACA,iBAAKH,OAAL;AACH,WAPwB,CAQzB;AACA;AACA;AACA;;AACH,SAlEgD,CAoEjD;;;AACOc,QAAAA,IAAI,CAACC,MAAD,EAA2B;AAClC,eAAKH,mBAAL;;AACA,cAAI,CAACG,MAAL,EAAa;AACT;AAAA;AAAA,sCAASC,KAAT,CAAe,MAAf;AACA;AACH;;AACD,eAAKrB,SAAL,CAAemB,IAAf,CAAoBC,MAApB;AACH;;AAEMN,QAAAA,SAAS,CAACE,KAAD,EAA4B;AACxC;AAAA;AAAA,oCAASR,GAAT,CAAa,WAAb,EAA0BQ,KAA1B;AACA,cAAIM,QAAQ,GAAG,IAAIC,UAAJ,CAA4BP,KAAK,CAACQ,IAAlC,CAAf;AACA;AAAA;AAAA,oCAAShB,GAAT,CAAa,UAAb,EAAyBc,QAAzB;AACA,cAAIE,IAAqB,GAAG;AAAA;AAAA,8DAAsBF,QAAtB,CAA5B;AACA;AAAA;AAAA,oCAASd,GAAT,CAAa,OAAb,EAAqBgB,IAArB;AACA;AAAA;AAAA,sCAAUC,cAAV,CAAyBD,IAAI,CAACE,QAA9B,EAAwCF,IAAxC;AACH,SArFgD,CAwFjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AACOG,QAAAA,KAAK,GAAS;AACjB,cAAI,KAAK3B,SAAT,EAAoB,KAAKA,SAAL,CAAe2B,KAAf;AACvB;;AAGMhB,QAAAA,OAAO,CAACK,KAAD,EAA0B;AACpC;AAAA;AAAA,oCAASR,GAAT,CAAa,SAAb,EAAwBQ,KAAxB;AACA,eAAKjB,WAAL,GAAmB,KAAKD,kBAAxB;AACH;;AAGMe,QAAAA,OAAO,CAACG,KAAD,EAAqB;AAC/B;AAAA;AAAA,oCAASR,GAAT,CAAa,SAAb,EAAwBQ,KAAxB;AACA,eAAKjB,WAAL,GAAmB,KAAKD,kBAAxB;AACH;;AApJgD,O;AAwJrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAjKqBR,MAAAA,Y,CAEFc,I,GAAqB,I","sourcesContent":["import {SysConfig} from './SysConfig';\nimport CmdMgr from './cmd/CmdMgr';\nimport HandleMgr from './HandleMgr';\nimport LogUtils from './LogUtils';\nimport {decodeExternalMessage, ExternalMessage} from './pb/ExternalMessage';\nimport ISocket from './ISocket';\n\n/**\n * Predefined variables\n * Name = SocketClient\n * DateTime = Sat Nov 27 2021 13:14:23 GMT+0800 (中国标准时间)\n * Author = 孟凡雷\n * FileBasename = SocketClient.ts\n * FileBasenameNoExtension = SocketClient\n * URL = db://assets/script/net/socket/SocketClient.ts\n * ManualUrl = https://docs.cocos.com/creator/3.3/manual/zh/\n *\n */\nexport default class SocketClient implements ISocket {\n\n    private static _ins: SocketClient = null;\n\n    //获得实例对象\n    public static get ins(): SocketClient {\n        return this._ins == null ? this._ins = new SocketClient() : this._ins;\n    }\n\n    // private constructor() {\n    // this.SocketState = this.SocketState_NoConnect;\n    // this.webScoket = null;\n    // }\n\n    //Socket连接状态定义\n    public SocketState_NoConnect: number = 0;  //没有连接\n    public SocketState_Connected: number = 1;  //已经连接\n    public SocketState_Closing: number = 2; //正在关闭中\n    public SocketState_Closed: number = 3; //已经关闭\n    public SocketState: number = this.SocketState_NoConnect;\n    public webScoket: WebSocket = null\n    private AUTO_CONNECT: number = null;\n    public recvBuf: Uint8Array;                //接收缓冲\n    public async connect(ws: string = SysConfig.wsUrl): Promise<void> {\n        LogUtils.log('已经启动了断开自动连接')\n        if (!this.webScoket) {\n            // if (sys.isNative) {\n            //     let cacert: Asset = await AssetUtils.loadResSync(\"ssl/cacert\", Asset)\n            //     let pemUrl = cacert.nativeUrl;\n            //     // if (loader.md5Pipe) {\n            //     //     pemUrl = loader.md5Pipe.transformURL(pemUrl);\n            //     // }\n            //     this.webScoket = new WebSocket(ws, pemUrl);\n            // } else {\n            this.webScoket = new WebSocket(ws);\n            // }\n        }\n        if (this.SocketState != this.SocketState_Connected) {\n            this.webScoket.binaryType = \"arraybuffer\";\n            this.webScoket.onclose = this.onclose.bind(this);\n            this.webScoket.onerror = this.onerror.bind(this);\n            this.webScoket.onmessage = this.onmessage.bind(this);\n            this.webScoket.onopen = this.onopen.bind(this);\n        } else {\n            this.onopen(null);\n        }\n    }\n\n\n    public onopen(event: Event): void {\n        this.SocketState = this.SocketState_Connected\n        LogUtils.log(\"onopen\", event)\n    }\n\n    public checkAndAutoConnect() {\n        if (!this.webScoket || this.webScoket.readyState !== this.SocketState_Connected) {\n            // if (this.AUTO_CONNECT) {\n                LogUtils.log('已经启动了断开自动连接')\n                // continue\n            // }\n            this.connect()\n        }\n        // if (this.AUTO_CONNECT) {\n        //     clearInterval(this.AUTO_CONNECT)\n        //     this.AUTO_CONNECT = null\n        // }\n    }\n\n    //发送消息\n    public send(pbBuff: Uint8Array): void {\n        this.checkAndAutoConnect();\n        if (!pbBuff) {\n            LogUtils.error(\"没有数据\")\n            return;\n        }\n        this.webScoket.send(pbBuff);\n    }\n\n    public onmessage(event: MessageEvent): void {\n        LogUtils.log(\"onmessage\", event)\n        let recvData = new Uint8Array(<ArrayBuffer>event.data);\n        LogUtils.log(\"recvData\", recvData)\n        let data: ExternalMessage = decodeExternalMessage(recvData)\n        LogUtils.log(\"data \",data)\n        HandleMgr.packageHandler(data.cmdMerge, data);\n    }\n\n\n    //发送消息\n    // public send(cmd: number, subCmd: number, pbBuff: Uint8Array, cmdCode: number = 1, protocolSwich: number = 0): void {\n    //     if (this.webScoket && this.webScoket.readyState === this.SocketState_Connected) {\n    //         if (!pbBuff) {\n    //             pbBuff = new Uint8Array(0);\n    //         }\n    //         let ab = new ArrayBuffer(NetPackageHead.LENGTH + pbBuff.length);\n    //         let dv = new DataView(ab);\n    //         dv.setUint16(0, NetPackageHead.LENGTH + pbBuff.length, true);\n    //         dv.setUint16(2, cmdCode, true);\n    //         dv.setUint16(4, protocolSwich, true);\n    //         dv.setUint32(5, CmdMgr.getMergeCmd(cmd, subCmd), true);\n    //         dv.setUint16(9, 0, true);\n    //         dv.setUint32(11, pbBuff.length, true);\n    //         let tempUi8A = new Uint8Array(dv.buffer);\n    //         tempUi8A.set(pbBuff, NetPackageHead.LENGTH);\n    //         this.webScoket.send(tempUi8A);\n    //     } else {\n    //         //网络连接异常\n    //         // this.connect();\n    //     }\n    // }\n\n    // public onmessage(event: MessageEvent): void {\n    //     LogUtils.log(\"onmessage\", event)\n    //     let recvData = new Uint8Array(<ArrayBuffer>event.data);\n    //     if (this.recvBuf != null && this.recvBuf.byteLength > 0) {\n    //         let allBuf = new Uint8Array(this.recvBuf.length + recvData.length);\n    //         allBuf.set(this.recvBuf, 0);\n    //         allBuf.set(recvData, this.recvBuf.length);\n    //     } else {\n    //         this.recvBuf = recvData;\n    //     }\n    //     //处理数据\n    //     while (this.recvBuf.length >= NetPackageHead.LENGTH) {\n    //         let packageHead = new NetPackageHead();\n    //         packageHead.read(this.recvBuf);\n    //         if (this.recvBuf.length >= NetPackageHead.LENGTH) {\n    //             let netPackage = new NetPackage();\n    //             this.recvBuf = netPackage.read(this.recvBuf);\n    //             HandleMgr.packageHandler(CmdMgr.getCmd(netPackage.head.mergeCmd), CmdMgr.getSubCmd(netPackage.head.mergeCmd), netPackage.bodyBuff);\n    //         }\n    //     }\n    // }\n\n    //关闭close\n    public close(): void {\n        if (this.webScoket) this.webScoket.close();\n    }\n\n\n    public onclose(event: CloseEvent): void {\n        LogUtils.log(\"onclose\", event)\n        this.SocketState = this.SocketState_Closed;\n    }\n\n\n    public onerror(event: Event): void {\n        LogUtils.log(\"onerror\", event)\n        this.SocketState = this.SocketState_Closed;\n    }\n\n}\n\n/**\n * [1] Class member could be defined like this.\n * [2] Use `property` decorator if your want the member to be serializable.\n * [3] Your initialization goes here.\n * [4] Your update function goes here.\n *\n * Learn more about scripting: https://docs.cocos.com/creator/3.3/manual/zh/scripting/\n * Learn more about CCClass: https://docs.cocos.com/creator/3.3/manual/zh/scripting/ccclass.html\n * Learn more about life-cycle callbacks: https://docs.cocos.com/creator/3.3/manual/zh/scripting/life-cycle-callbacks.html\n */\n"]}