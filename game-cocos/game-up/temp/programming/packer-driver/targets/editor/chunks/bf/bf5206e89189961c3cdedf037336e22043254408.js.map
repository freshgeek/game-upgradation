{"version":3,"sources":["file:///Users/chenchao/code/person/game-upgradation/game-cocos/game-up/assets/iogame/AssetUtils.ts"],"names":["AssetUtils","_decorator","resources","instantiate","isValid","assetManager","ccclass","property","loadRemotePic","url","Promise","resolve","loadRemote","err","res","loadResSync","type","onProgress","load","asset","addRef","cloneResSync","prefab","node","releaseAsset","assets","get","decRes","Array","a","decRef"],"mappings":";;;6HAgBqBA,U;;;;;;;;;AAfZC,MAAAA,U,OAAAA,U;AAA6BC,MAAAA,S,OAAAA,S;AAA0BC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,O,OAAAA,O;AAASC,MAAAA,Y,OAAAA,Y;;;;;;;;;OAChF;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBN,U;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;yBAEqBD,U,GAAN,MAAMA,UAAN,CAAiB;AAE5B;AAC2B,eAAbQ,aAAa,CAACC,GAAD,EAAmC;AAC1D,iBAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAI;AAC1BN,YAAAA,YAAY,CAACO,UAAb,CAAwBH,GAAxB,EAA6B,CAACI,GAAD,EAAMC,GAAN,KAA0B;AACnDH,cAAAA,OAAO,CAACE,GAAG,GAAG,IAAH,GAAUC,GAAd,CAAP;AACH,aAFD;AAGH,WAJM,CAAP;AAKH;AAED;;;AACyB,eAAXC,WAAW,CAAIN,GAAJ,EAAiBO,IAAjB,EAAqCC,UAArC,EAAiI;AACtJ,iBAAO,IAAIP,OAAJ,CAAYC,OAAO,IAAI;AAC1BT,YAAAA,SAAS,CAACgB,IAAV,CAAeT,GAAf,EAAoBO,IAApB,EAA0BC,UAA1B,EAAsC,CAACJ,GAAD,EAAMM,KAAN,KAAuB;AACzD,kBAAIN,GAAJ,EAAS;AACL;AACAF,gBAAAA,OAAO,CAAC,IAAD,CAAP;AACH,eAHD,MAGO;AACH;AACAA,gBAAAA,OAAO,CAACQ,KAAD,CAAP;AACA,qBAAKC,MAAL,CAAYD,KAAZ;AACH;AACJ,aATD;AAUH,WAXM,CAAP;AAYH;AAED;;;AAC0B,eAAZE,YAAY,CAAIC,MAAJ,EAAmC;AACzD,iBAAO,IAAIZ,OAAJ,CAAYC,OAAO,IAAI;AAC1B,gBAAIY,IAAI,GAAG,IAAX;;AACA,gBAAInB,OAAO,CAACkB,MAAD,CAAX,EAAqB;AACjBC,cAAAA,IAAI,GAAGpB,WAAW,CAACmB,MAAD,CAAlB,CADiB,CAEjB;AACH;;AACDX,YAAAA,OAAO,CAACY,IAAD,CAAP;AACH,WAPM,CAAP;AAQH;AAED;;;AAC0B,eAAZC,YAAY,CAACC,MAAD,EAAmC;AACzD,cAAI,OAAOA,MAAP,IAAiB,QAArB,EAA+B;AAC3BA,YAAAA,MAAM,GAAGvB,SAAS,CAACwB,GAAV,CAAcD,MAAd,CAAT;AACH;;AACD,eAAKE,MAAL,CAAYF,MAAZ;AACH;AAED;;;AACqB,eAANL,MAAM,CAACK,MAAD,EAA0B;AAC3C,cAAIA,MAAM,YAAYG,KAAtB,EAA6B;AACzB,iBAAK,MAAMC,CAAX,IAAgBJ,MAAhB,EAAwB;AACpBI,cAAAA,CAAC,CAACT,MAAF;AACH;AACJ,WAJD,MAIO;AACHK,YAAAA,MAAM,CAACL,MAAP;AACH;AACJ;AAED;;;AACqB,eAANO,MAAM,CAACF,MAAD,EAA0B;AAC3C,cAAIA,MAAM,YAAYG,KAAtB,EAA6B;AACzB,iBAAK,MAAMC,CAAX,IAAgBJ,MAAhB,EAAwB;AACpBI,cAAAA,CAAC,CAACC,MAAF;AACH;AACJ,WAJD,MAIO;AACHL,YAAAA,MAAM,CAACK,MAAP;AACH;AACJ;;AAnE2B,O;AAsEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["\nimport { _decorator, Component, Node, resources, Asset, Prefab, instantiate, isValid, assetManager, ImageAsset } from 'cc';\nconst { ccclass, property } = _decorator;\n\n/**\n * Predefined variables\n * Name = AssetUtils\n * DateTime = Fri Dec 24 2021 21:25:35 GMT+0800 (中国标准时间)\n * Author = 孟凡雷\n * FileBasename = AssetUtils.ts\n * FileBasenameNoExtension = AssetUtils\n * URL = db://assets/script/utils/AssetUtils.ts\n * ManualUrl = https://docs.cocos.com/creator/3.4/manual/zh/\n *\n */\n\nexport default class AssetUtils {\n\n    /**加载远程图片 */\n    public static loadRemotePic(url: string): Promise<ImageAsset> {\n        return new Promise(resolve => {\n            assetManager.loadRemote(url, (err, res: ImageAsset) => {\n                resolve(err ? null : res);\n            })\n        })\n    }\n\n    /** 加载res资源 */\n    public static loadResSync<T>(url: string, type: typeof Asset, onProgress?: (completedCount: number, totalCount: number, item: any) => void): Promise<any> {\n        return new Promise(resolve => {\n            resources.load(url, type, onProgress, (err, asset: Asset) => {\n                if (err) {\n                    // LogUtils.log(err)\n                    resolve(null)\n                } else {\n                    // LogUtils.log(asset)\n                    resolve(asset)\n                    this.addRef(asset);\n                }\n            })\n        })\n    }\n\n    /**实例化动态预制体*/\n    public static cloneResSync<T>(prefab: Prefab): Promise<Node> {\n        return new Promise(resolve => {\n            let node = null;\n            if (isValid(prefab)) {\n                node = instantiate(prefab);\n                // this.releaseAsset(prefab);\n            }\n            resolve(node);\n        })\n    }\n\n    /** 释放资源 */\n    public static releaseAsset(assets: Asset | Asset[] | string) {\n        if (typeof assets == \"string\") {\n            assets = resources.get(assets);\n        }\n        this.decRes(assets);\n    }\n\n    /** 增加引用计数 */\n    private static addRef(assets: Asset | Asset[]) {\n        if (assets instanceof Array) {\n            for (const a of assets) {\n                a.addRef();\n            }\n        } else {\n            assets.addRef();\n        }\n    }\n\n    /** 减少引用计数, 当引用计数减少到0时,会自动销毁 */\n    private static decRes(assets: Asset | Asset[]) {\n        if (assets instanceof Array) {\n            for (const a of assets) {\n                a.decRef();\n            }\n        } else {\n            assets.decRef();\n        }\n    }\n}\n\n/**\n * [1] Class member could be defined like this.\n * [2] Use `property` decorator if your want the member to be serializable.\n * [3] Your initialization goes here.\n * [4] Your update function goes here.\n *\n * Learn more about scripting: https://docs.cocos.com/creator/3.4/manual/zh/scripting/\n * Learn more about CCClass: https://docs.cocos.com/creator/3.4/manual/zh/scripting/ccclass.html\n * Learn more about life-cycle callbacks: https://docs.cocos.com/creator/3.4/manual/zh/scripting/life-cycle-callbacks.html\n */\n"]}